@model FashionStore.Models.Product
@using FashionStore.Extensions;
@{
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
    ViewBag.Title = "Create product";
}
<style>

    #AddColor:hover {
        cursor: pointer
    }
</style>
<h2>Create product</h2>

<div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <div class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-6">
                    <h1 class="m-0 text-dark">Create product</h1>
                </div><!-- /.col -->
                <div class="col-sm-6">
                    @Html.Raw(Html.BuildBreadcrumbNavigation())
                </div><!-- /.col -->
            </div><!-- /.row -->
        </div><!-- /.container-fluid -->
    </div>
    <!-- /.content-header -->
    <!-- Main content -->
    <section class="content">
        <div class="container-fluid">
            <div>
                @Html.ActionLink("Back to List", "Index")
            </div>
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.CategoryId, "CategoryId", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("CategoryId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.SupplierId, "SupplierId", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("SupplierId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.SupplierId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.UnitPrice, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.UnitPrice, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.UnitPrice, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-md-12">Select size (check to include size and input amount to product)</label>
                        <div class="row">
                            <label class="col-md-1 text-right align-self-lg-center">
                                @Html.CheckBox("ckS", true, new { @id = "ckS" }) S
                            </label>
                            @Html.TextBox("SAmount", 1, new { @class = "form-control col-md-1", @type = "number", @min = 1, @id = "SAmount" })
                            <label class="col-md-1 text-right align-self-lg-center">
                                @Html.CheckBox("ckXS", true, new { @id = "ckXS" }) XS
                            </label>
                            @Html.TextBox("XSAmount", 1, new { @class = "form-control col-md-1", @type = "number", @min = 1, @id = "XSAmount" })
                            <label class="col-md-1 text-right align-self-lg-center">
                                @Html.CheckBox("ckM", true, new { @id = "ckM" }) M
                            </label>
                            @Html.TextBox("MAmount", 1, new { @class = "form-control col-md-1", @type = "number", @min = 1, @id = "MAmount" })
                            <label class="col-md-1 text-right align-self-lg-center">
                                @Html.CheckBox("ckL", true, new { @id = "ckL" }) L
                            </label>
                            @Html.TextBox("LAmount", 1, new { @class = "form-control col-md-1", @type = "number", @min = 1, @id = "LAmount" })
                            <label class="col-md-1 text-right align-self-lg-center">
                                @Html.CheckBox("ckXL", true, new { @id = "ckXL" }) XL
                            </label>
                            @Html.TextBox("XLAmount", 1, new { @class = "form-control col-md-1", @type = "number", @min = 1, @id = "XLAmount" })
                            <label class="col-md-1 text-right align-self-lg-center">
                                @Html.CheckBox("ckXXL", true, new { @id = "ckXXL" }) XXL
                            </label>
                            @Html.TextBox("XXLAmount", 1, new { @class = "form-control col-md-1", @type = "number", @min = 1, @id = "XXLAmount" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="ml-2 control-label">Color&nbsp;&nbsp;<i id="AddColor" title="Add color" class="fas fa-plus"></i></label>
                        <br />
                        @*<div class="col-md-10">
                                @Html.EditorFor(model => model.Color, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Color, "", new { @class = "text-danger" })
                            </div>*@
                        <label for="color1" class="control-label ml-3">Color 1</label>
                        <input id="color1" class="form-control" type="color" />
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Discount, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Discount, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Discount, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.UnitsInStock, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.UnitsInStock, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.UnitsInStock, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.UnitsOnOrder, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.UnitsOnOrder, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.UnitsOnOrder, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ProductAvailable, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.ProductAvailable)
                                @Html.ValidationMessageFor(model => model.ProductAvailable, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Picture, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Picture, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Picture, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Note, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Note, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Note, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.CollectionId, "CollectionId", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("CollectionId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.CollectionId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Create" class="btn btn-primary" />
                        </div>
                    </div>
                </div>
            }
        </div><!-- /.container-fluid -->

    </section>
    <!-- /.content -->

</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

